{"typeDocJsonParserVersion":"9.0.1","id":0,"name":"@reciple/decorators","version":null,"readme":"<h1 align=\"center\">\n    <img src=\"https://i.imgur.com/h0ljJR5.png\" width=\"50%\">\n    <br>\n</h1>\n\n<h3 align=\"center\">\n    <a href=\"https://discord.gg/2gyckrwK7b\">\n        <img src=\"https://img.shields.io/discord/1032785824686817291?color=5865F2&logo=discord&logoColor=white\">\n    </a>\n    <a href=\"https://npmjs.org/package/create-reciple\">\n        <img src=\"https://img.shields.io/npm/v/create-reciple?label=npm\">\n    </a>\n    <a href=\"https://github.com/thenorthsolution/Reciple/tree/main/packages/create-reciple\">\n        <img src=\"https://img.shields.io/npm/dt/create-reciple?maxAge=3600\">\n    </a>\n    <a href=\"https://www.codefactor.io/repository/github/thenorthsolution/reciple\">\n        <img src=\"https://www.codefactor.io/repository/github/thenorthsolution/reciple/badge\">\n    </a>\n    <br>\n    <div style=\"padding-top: 1rem\">\n        <a href=\"https://discord.gg/2gyckrwK7b\">\n            <img src=\"http://invidget.switchblade.xyz/2gyckrwK7b\">\n        </a>\n    </div>\n</h3>\n\n---\n\n## About\n\n`@reciple/decorators` is a collection of decorators used in Reciple projects.\n\n## Installation\n\n```bash\nnpm i @reciple/decorators\nyarn add @reciple/decorators\npnpm i @reciple/decorators\n```\n\n## Usage\n```ts\nimport { setClientEvent, setContextMenuCommand, setMessageCommand, setRecipleModule, setRecipleModuleLoad, setRecipleModuleStart, setRecipleModuleUnload, setSlashCommand } from '@reciple/decorators';\nimport { AnyCommandExecuteData, CommandType, RecipleModuleData } from \"reciple\";\nimport { ApplicationCommandType, type Message } from 'discord.js';\n\n@setRecipleModule()\nexport class PingCommand implements RecipleModuleData {\n    @setRecipleModuleStart()\n    async onStart(): Promise<boolean> {\n        return true;\n    }\n\n    @setRecipleModuleLoad()\n    async onLoad(): Promise<void> {}\n\n    @setRecipleModuleUnload()\n    async onUnload(): Promise<void> {}\n\n    @setContextMenuCommand({ name: 'ping', type: ApplicationCommandType.Message })\n    @setMessageCommand({ name: 'ping', description: 'Replies with pong!' })\n    @setSlashCommand({ name: 'ping', description: 'Replies with pong!' })\n    async handleCommandExecute(data: AnyCommandExecuteData): Promise<void> {\n        switch (data.type) {\n            case CommandType.ContextMenuCommand:\n            case CommandType.SlashCommand:\n                await data.interaction.reply('Pong!');\n                return;\n            case CommandType.MessageCommand:\n                await data.message.reply('Pong!');\n                return;\n        }\n    }\n\n    @setClientEvent('messageCreate')\n    async handleMessageEvent(message: Message): Promise<void> {\n        if (!reciple.isReady() || (!message.content.includes(reciple.user.id) && !message.content.includes(reciple.user.displayName))) return;\n\n        await message.react('ðŸ‘€');\n    }\n}\n\nexport default new PingCommand();\n```\n","changelog":null,"classes":[],"enums":[],"functions":[{"id":46,"name":"setClientEvent","source":{"line":37,"file":"events.ts","path":"decorators","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/decorators/events.ts#L37"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":47,"name":"setClientEvent","comment":{"description":"Sets a client event\n\n```ts\nï¼ setRecipleModule()\nclass MyModule implements RecipleModuleData {\n    ï¼ setRecipleModuleStart()\n    async onStart() {\n        return true;\n    }\n\n    ï¼ setRecipleModuleLoad()\n    async onLoad() {}\n\n    ï¼ setRecipleModuleUnload()\n    async onUnload() {}\n\n    ï¼ setClientEvent('messageCreate')\n    async handleMessageEvent(message: Message) {\n        await message.reply('Test');\n    }\n}\n```","blockTags":[],"modifierTags":[]},"typeParameters":[{"id":48,"name":"E","constraint":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"number"},{"kind":"intrinsic","type":"symbol"}]},"default":null},{"id":49,"name":"A","constraint":{"kind":"reference","id":null,"name":"RecipleClientEvents","packageName":null,"typeArguments":[]},"default":null}],"parameters":[{"id":50,"name":"event","comment":{"description":"The event name","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":-1,"name":"E","packageName":null,"typeArguments":[]}},{"id":51,"name":"once","comment":{"description":"True if the event should only be triggered once","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":130,"name":"TypedMethodDecorator","packageName":"@reciple/decorators","typeArguments":[{"kind":"reflection","properties":null,"signatures":[{"id":53,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":54,"name":"args","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"reference","id":-1,"name":"A","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"intrinsic","type":"any"}}],"methods":null}]}},{"id":55,"name":"setClientEvent","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":56,"name":"E","constraint":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]},"default":null},{"id":57,"name":"A","constraint":{"kind":"array","type":{"kind":"intrinsic","type":"any"}},"default":null}],"parameters":[{"id":58,"name":"event","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":-1,"name":"E","packageName":null,"typeArguments":[]}},{"id":59,"name":"once","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":130,"name":"TypedMethodDecorator","packageName":"@reciple/decorators","typeArguments":[{"kind":"reflection","properties":null,"signatures":[{"id":61,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":62,"name":"args","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"reference","id":-1,"name":"A","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"intrinsic","type":"any"}}],"methods":null}]}}]},{"id":1,"name":"setContextMenuCommand","source":{"line":25,"file":"commands.ts","path":"decorators","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/decorators/commands.ts#L25"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":2,"name":"setContextMenuCommand","comment":{"description":"Sets a context menu command decorator.\n\n```ts\nï¼ setRecipleModule()\nclass MyModule implements RecipleModuleData {\n    ï¼ setRecipleModuleStart()\n    async onStart() {\n        return true;\n    }\n\n    ï¼ setContextMenuCommand({ name: 'Test', type: 'Message' })\n    async handleContextMenuExecute(data: ContextMenuCommandExecuteData) {\n        await data.interaction.reply('Test');\n    }\n}\n```","blockTags":[{"name":"returns","text":"The decorator function."}],"modifierTags":[]},"typeParameters":[{"id":3,"name":"T","constraint":{"kind":"reference","id":null,"name":"ContextMenuCommandExecuteFunction","packageName":null,"typeArguments":[]},"default":null}],"parameters":[{"id":4,"name":"data","comment":{"description":"The data for the context menu command.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"reference","id":null,"name":"Omit","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"ContextMenuCommandBuilder","packageName":null,"typeArguments":[]},{"kind":"union","types":[{"kind":"literal","value":"execute"},{"kind":"literal","value":"setExecute"}]}]},{"kind":"reference","id":null,"name":"Omit","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"ContextMenuCommandBuilderData","packageName":null,"typeArguments":[]},{"kind":"union","types":[{"kind":"literal","value":"execute"},{"kind":"literal","value":"command_type"}]}]}]}}],"returnType":{"kind":"reflection","properties":null,"signatures":[{"id":6,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":7,"name":"target","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reflection","properties":[{"id":9,"name":"constructor","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"reflection","properties":[{"id":11,"name":"prototype","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"reflection","properties":[{"id":13,"name":"[recipleModuleMetadataSymbol]","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"reference","id":137,"name":"RecipleModuleDecoratorMetadata","packageName":"@reciple/decorators","typeArguments":[]}}],"signatures":null,"methods":null}}],"signatures":null,"methods":null}}],"signatures":null,"methods":null}},{"id":14,"name":"propertyKey","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]}},{"id":15,"name":"descriptor","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":null,"name":"TypedPropertyDescriptor","packageName":"typescript","typeArguments":[{"kind":"reference","id":-1,"name":"T","packageName":null,"typeArguments":[]}]}}],"returnType":{"kind":"intrinsic","type":"void"}}],"methods":null}}]},{"id":16,"name":"setMessageCommand","source":{"line":65,"file":"commands.ts","path":"decorators","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/decorators/commands.ts#L65"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":17,"name":"setMessageCommand","comment":{"description":"Sets a message command decorator.\n\n```ts\nï¼ setRecipleModule()\nclass MyModule implements RecipleModuleData {\n    ï¼ setRecipleModuleStart()\n    async onStart() {\n        return true;\n    }\n\n    ï¼ setMessageCommand({ name: 'test', description: 'test command', aliases: ['t'] })\n    async handleMessageCommandExecute(data: MessageCommandExecuteData) {\n        await data.message.reply('Test');\n    }\n}\n```","blockTags":[{"name":"returns","text":"The decorator function."}],"modifierTags":[]},"typeParameters":[{"id":18,"name":"T","constraint":{"kind":"reference","id":null,"name":"MessageCommandExecuteFunction","packageName":null,"typeArguments":[]},"default":null}],"parameters":[{"id":19,"name":"data","comment":{"description":"The data for the message command.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"reference","id":null,"name":"Omit","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"MessageCommandBuilder","packageName":null,"typeArguments":[]},{"kind":"union","types":[{"kind":"literal","value":"execute"},{"kind":"literal","value":"setExecute"}]}]},{"kind":"reference","id":null,"name":"Omit","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"MessageCommandBuilderData","packageName":null,"typeArguments":[]},{"kind":"union","types":[{"kind":"literal","value":"execute"},{"kind":"literal","value":"command_type"}]}]}]}}],"returnType":{"kind":"reflection","properties":null,"signatures":[{"id":21,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":22,"name":"target","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reflection","properties":[{"id":24,"name":"constructor","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"reflection","properties":[{"id":26,"name":"prototype","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"reflection","properties":[{"id":28,"name":"[recipleModuleMetadataSymbol]","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"reference","id":137,"name":"RecipleModuleDecoratorMetadata","packageName":"@reciple/decorators","typeArguments":[]}}],"signatures":null,"methods":null}}],"signatures":null,"methods":null}}],"signatures":null,"methods":null}},{"id":29,"name":"propertyKey","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]}},{"id":30,"name":"descriptor","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":null,"name":"TypedPropertyDescriptor","packageName":"typescript","typeArguments":[{"kind":"reference","id":-1,"name":"T","packageName":null,"typeArguments":[]}]}}],"returnType":{"kind":"intrinsic","type":"void"}}],"methods":null}}]},{"id":80,"name":"setRESTEvent","source":{"line":115,"file":"events.ts","path":"decorators","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/decorators/events.ts#L115"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":81,"name":"setRESTEvent","comment":{"description":"Sets a REST event\n\n```ts\nï¼ setRecipleModule()\nclass MyModule implements RecipleModuleData {\n    ï¼ setRecipleModuleStart()\n    async onStart() {\n        return true;\n    }\n\n    ï¼ setRecipleModuleLoad()\n    async onLoad() {}\n\n    ï¼ setRecipleModuleUnload()\n    async onUnload() {}\n\n    ï¼ setRESTEvent('restDebug')\n    async handleRESTEvent(info: string) {\n        console.log(info);\n    }\n}\n```","blockTags":[],"modifierTags":[]},"typeParameters":[{"id":82,"name":"E","constraint":{"kind":"typeOperator","operator":"keyof","type":{"kind":"reference","id":null,"name":"RestEvents","packageName":"@discordjs/rest","typeArguments":[]}},"default":null},{"id":83,"name":"A","constraint":{"kind":"union","types":[{"kind":"tuple","types":[{"kind":"namedTupleMember","name":"sweptHandlers","type":{"kind":"reference","id":null,"name":"Collection","packageName":"@discordjs/collection","typeArguments":[{"kind":"intrinsic","type":"string"},{"kind":"reference","id":null,"name":"IHandler","packageName":"@discordjs/rest","typeArguments":[]}]},"optional":false}]},{"kind":"tuple","types":[{"kind":"namedTupleMember","name":"sweptHashes","type":{"kind":"reference","id":null,"name":"Collection","packageName":"@discordjs/collection","typeArguments":[{"kind":"intrinsic","type":"string"},{"kind":"reference","id":null,"name":"HashData","packageName":"@discordjs/rest","typeArguments":[]}]},"optional":false}]},{"kind":"tuple","types":[{"kind":"namedTupleMember","name":"invalidRequestInfo","type":{"kind":"reference","id":null,"name":"InvalidRequestWarningData","packageName":"@discordjs/rest","typeArguments":[]},"optional":false}]},{"kind":"tuple","types":[{"kind":"namedTupleMember","name":"rateLimitInfo","type":{"kind":"reference","id":null,"name":"RateLimitData","packageName":"@discordjs/rest","typeArguments":[]},"optional":false}]},{"kind":"tuple","types":[{"kind":"namedTupleMember","name":"request","type":{"kind":"reference","id":null,"name":"APIRequest","packageName":"@discordjs/rest","typeArguments":[]},"optional":false},{"kind":"namedTupleMember","name":"response","type":{"kind":"reference","id":null,"name":"ResponseLike","packageName":"@discordjs/rest","typeArguments":[]},"optional":false}]},{"kind":"tuple","types":[{"kind":"namedTupleMember","name":"info","type":{"kind":"intrinsic","type":"string"},"optional":false}]}]},"default":null}],"parameters":[{"id":84,"name":"event","comment":{"description":"The event name","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":-1,"name":"E","packageName":null,"typeArguments":[]}},{"id":85,"name":"once","comment":{"description":"True if the event should only be triggered once","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":130,"name":"TypedMethodDecorator","packageName":"@reciple/decorators","typeArguments":[{"kind":"reflection","properties":null,"signatures":[{"id":87,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":88,"name":"args","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"reference","id":-1,"name":"A","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"intrinsic","type":"any"}}],"methods":null}]}},{"id":89,"name":"setRESTEvent","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":90,"name":"E","constraint":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]},"default":null},{"id":91,"name":"A","constraint":{"kind":"array","type":{"kind":"intrinsic","type":"any"}},"default":null}],"parameters":[{"id":92,"name":"event","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":-1,"name":"E","packageName":null,"typeArguments":[]}},{"id":93,"name":"once","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":130,"name":"TypedMethodDecorator","packageName":"@reciple/decorators","typeArguments":[{"kind":"reflection","properties":null,"signatures":[{"id":95,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":96,"name":"args","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"reference","id":-1,"name":"A","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"intrinsic","type":"any"}}],"methods":null}]}}]},{"id":100,"name":"setRecipleModule","source":{"line":17,"file":"module.ts","path":"decorators","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/decorators/module.ts#L17"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":101,"name":"setRecipleModule","comment":{"description":"Sets a module decorator. Module metadata is stored in the prototype of the class with the symbol `recipleModuleMetadataSymbol`.\n\n```ts\nï¼ setRecipleModule()\nclass MyModule implements RecipleModuleData {\n    async onStart(){\n        return true;\n    }\n}\n```","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":102,"name":"versions","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"array","type":{"kind":"intrinsic","type":"string"}}]}}],"returnType":{"kind":"reference","id":null,"name":"ClassDecorator","packageName":"typescript","typeArguments":[]}},{"id":103,"name":"setRecipleModule","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":104,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":null,"name":"Partial","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"Pick","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"RecipleModuleData","packageName":null,"typeArguments":[]},{"kind":"union","types":[{"kind":"literal","value":"versions"},{"kind":"literal","value":"id"},{"kind":"literal","value":"name"}]}]}]}}],"returnType":{"kind":"reference","id":null,"name":"ClassDecorator","packageName":"typescript","typeArguments":[]}}]},{"id":113,"name":"setRecipleModuleLoad","source":{"line":105,"file":"module.ts","path":"decorators","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/decorators/module.ts#L105"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":114,"name":"setRecipleModuleLoad","comment":{"description":"Sets the load function of the module. This decorator must be used on the `onLoad` method. The events listeners will be added to its event emitter when the module is loaded.\n\n```ts\nï¼ setRecipleModule()\nclass MyModule implements RecipleModuleData {\n    ï¼ setRecipleModuleStart()\n    async onStart() {\n        return true;\n    }\n\n    ï¼ setRecipleModuleLoad()\n    async onLoad() {}\n}\n```","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[],"returnType":{"kind":"reflection","properties":null,"signatures":[{"id":116,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":117,"name":"T","constraint":{"kind":"intrinsic","type":"unknown"},"default":null}],"parameters":[{"id":118,"name":"target","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"unknown"}},{"id":119,"name":"propertyKey","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]}},{"id":120,"name":"descriptor","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"TypedPropertyDescriptor","packageName":"typescript","typeArguments":[{"kind":"reference","id":-1,"name":"T","packageName":null,"typeArguments":[]}]}}],"returnType":{"kind":"intrinsic","type":"void"}}],"methods":null}}]},{"id":105,"name":"setRecipleModuleStart","source":{"line":59,"file":"module.ts","path":"decorators","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/decorators/module.ts#L59"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":106,"name":"setRecipleModuleStart","comment":{"description":"Sets the start function of the module. This decorator must be used on the `onStart` method. The commands and versions will be added to the module when the module is started.\n\n```ts\nï¼ setRecipleModule()\nclass MyModule implements RecipleModuleData {\n    ï¼ setRecipleModuleStart()\n    async onStart() {\n        return true;\n    }\n}\n```","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[],"returnType":{"kind":"reflection","properties":null,"signatures":[{"id":108,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":109,"name":"T","constraint":{"kind":"reference","id":null,"name":"RecipleModuleData","packageName":null,"typeArguments":[]},"default":null}],"parameters":[{"id":110,"name":"target","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"unknown"}},{"id":111,"name":"propertyKey","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]}},{"id":112,"name":"descriptor","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"TypedPropertyDescriptor","packageName":"typescript","typeArguments":[{"kind":"reference","id":-1,"name":"T","packageName":null,"typeArguments":[]}]}}],"returnType":{"kind":"intrinsic","type":"void"}}],"methods":null}}]},{"id":121,"name":"setRecipleModuleUnload","source":{"line":171,"file":"module.ts","path":"decorators","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/decorators/module.ts#L171"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":122,"name":"setRecipleModuleUnload","comment":{"description":"Sets the unload function of the module. This decorator must be used on the `onUnload` method. The events listeners will be removed from its event emitter when the module is unloaded.\n\n```ts\nï¼ setRecipleModule()\nclass MyModule implements RecipleModuleData {\n    ï¼ setRecipleModuleStart()\n    async onStart() {\n        return true;\n    }\n\n    ï¼ setRecipleModuleLoad()\n    async onLoad() {}\n\n    ï¼ setRecipleModuleUnload()\n    async onUnload() {}\n}\n```","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[],"returnType":{"kind":"reflection","properties":null,"signatures":[{"id":124,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":125,"name":"T","constraint":{"kind":"intrinsic","type":"unknown"},"default":null}],"parameters":[{"id":126,"name":"target","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"unknown"}},{"id":127,"name":"propertyKey","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]}},{"id":128,"name":"descriptor","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"TypedPropertyDescriptor","packageName":"typescript","typeArguments":[{"kind":"reference","id":-1,"name":"T","packageName":null,"typeArguments":[]}]}}],"returnType":{"kind":"intrinsic","type":"void"}}],"methods":null}}]},{"id":31,"name":"setSlashCommand","source":{"line":104,"file":"commands.ts","path":"decorators","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/decorators/commands.ts#L104"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":32,"name":"setSlashCommand","comment":{"description":"Sets a slash command decorator.\n\n```ts\nï¼ setRecipleModule()\nclass MyModule implements RecipleModuleData {\n    ï¼ setRecipleModuleStart()\n    async onStart() {\n        return true;\n    }\n\n    ï¼ setSlashCommand({ name: 'Test', description: 'Test command' })\n    async handleSlashCommandExecute(data: SlashCommandExecuteData) {\n        await data.interaction.reply('Test');\n    }\n}\n```","blockTags":[{"name":"returns","text":"The decorator function."}],"modifierTags":[]},"typeParameters":[{"id":33,"name":"T","constraint":{"kind":"reference","id":null,"name":"SlashCommandExecuteFunction","packageName":null,"typeArguments":[]},"default":null}],"parameters":[{"id":34,"name":"data","comment":{"description":"The data for the slash command.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"reference","id":null,"name":"Omit","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"AnySlashCommandBuilder","packageName":null,"typeArguments":[]},{"kind":"union","types":[{"kind":"literal","value":"execute"},{"kind":"literal","value":"setExecute"}]}]},{"kind":"reference","id":null,"name":"Omit","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"SlashCommandBuilderData","packageName":null,"typeArguments":[]},{"kind":"union","types":[{"kind":"literal","value":"execute"},{"kind":"literal","value":"command_type"}]}]}]}}],"returnType":{"kind":"reflection","properties":null,"signatures":[{"id":36,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":37,"name":"target","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reflection","properties":[{"id":39,"name":"constructor","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"reflection","properties":[{"id":41,"name":"prototype","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"reflection","properties":[{"id":43,"name":"[recipleModuleMetadataSymbol]","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"reference","id":137,"name":"RecipleModuleDecoratorMetadata","packageName":"@reciple/decorators","typeArguments":[]}}],"signatures":null,"methods":null}}],"signatures":null,"methods":null}}],"signatures":null,"methods":null}},{"id":44,"name":"propertyKey","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]}},{"id":45,"name":"descriptor","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":null,"name":"TypedPropertyDescriptor","packageName":"typescript","typeArguments":[{"kind":"reference","id":-1,"name":"T","packageName":null,"typeArguments":[]}]}}],"returnType":{"kind":"intrinsic","type":"void"}}],"methods":null}}]},{"id":63,"name":"setWebsocketEvent","source":{"line":76,"file":"events.ts","path":"decorators","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/decorators/events.ts#L76"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":64,"name":"setWebsocketEvent","comment":{"description":"Sets a websocket event\n\n```ts\nï¼ setRecipleModule()\nclass MyModule implements RecipleModuleData {\n    ï¼ setRecipleModuleStart()\n    async onStart() {\n        return true;\n    }\n\n    ï¼ setRecipleModuleLoad()\n    async onLoad() {}\n\n    ï¼ setRecipleModuleUnload()\n    async onUnload() {}\n\n    ï¼ setWebsocketEvent(GatewayDispatchEvents.MessageCreate)\n    async handleWebsocketEvent(data: any) {\n        console.log(data);\n    }\n}\n```","blockTags":[],"modifierTags":[]},"typeParameters":[{"id":65,"name":"E","constraint":{"kind":"union","types":[{"kind":"intrinsic","type":"number"},{"kind":"query","query":{"kind":"reference","id":null,"name":"SymbolConstructor.iterator","packageName":"typescript","typeArguments":[]}},{"kind":"literal","value":"toString"},{"kind":"literal","value":"charAt"},{"kind":"literal","value":"charCodeAt"},{"kind":"literal","value":"concat"},{"kind":"literal","value":"indexOf"},{"kind":"literal","value":"lastIndexOf"},{"kind":"literal","value":"localeCompare"},{"kind":"literal","value":"match"},{"kind":"literal","value":"replace"},{"kind":"literal","value":"search"},{"kind":"literal","value":"slice"},{"kind":"literal","value":"split"},{"kind":"literal","value":"substring"},{"kind":"literal","value":"toLowerCase"},{"kind":"literal","value":"toLocaleLowerCase"},{"kind":"literal","value":"toUpperCase"},{"kind":"literal","value":"toLocaleUpperCase"},{"kind":"literal","value":"trim"},{"kind":"literal","value":"length"},{"kind":"literal","value":"substr"},{"kind":"literal","value":"valueOf"},{"kind":"literal","value":"codePointAt"},{"kind":"literal","value":"includes"},{"kind":"literal","value":"endsWith"},{"kind":"literal","value":"normalize"},{"kind":"literal","value":"repeat"},{"kind":"literal","value":"startsWith"},{"kind":"literal","value":"anchor"},{"kind":"literal","value":"big"},{"kind":"literal","value":"blink"},{"kind":"literal","value":"bold"},{"kind":"literal","value":"fixed"},{"kind":"literal","value":"fontcolor"},{"kind":"literal","value":"fontsize"},{"kind":"literal","value":"italics"},{"kind":"literal","value":"link"},{"kind":"literal","value":"small"},{"kind":"literal","value":"strike"},{"kind":"literal","value":"sub"},{"kind":"literal","value":"sup"},{"kind":"literal","value":"padStart"},{"kind":"literal","value":"padEnd"},{"kind":"literal","value":"trimEnd"},{"kind":"literal","value":"trimStart"},{"kind":"literal","value":"trimLeft"},{"kind":"literal","value":"trimRight"},{"kind":"literal","value":"matchAll"},{"kind":"literal","value":"replaceAll"},{"kind":"literal","value":"at"}]},"default":null},{"id":66,"name":"A","constraint":{"kind":"tuple","types":[{"kind":"namedTupleMember","name":"data","type":{"kind":"intrinsic","type":"any"},"optional":false},{"kind":"namedTupleMember","name":"shardId","type":{"kind":"intrinsic","type":"number"},"optional":false}]},"default":null}],"parameters":[{"id":67,"name":"event","comment":{"description":"The event name","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":-1,"name":"E","packageName":null,"typeArguments":[]}},{"id":68,"name":"once","comment":{"description":"True if the event should only be triggered once","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":130,"name":"TypedMethodDecorator","packageName":"@reciple/decorators","typeArguments":[{"kind":"reflection","properties":null,"signatures":[{"id":70,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":71,"name":"args","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"reference","id":-1,"name":"A","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"intrinsic","type":"any"}}],"methods":null}]}},{"id":72,"name":"setWebsocketEvent","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[{"id":73,"name":"E","constraint":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]},"default":null},{"id":74,"name":"A","constraint":{"kind":"array","type":{"kind":"intrinsic","type":"any"}},"default":null}],"parameters":[{"id":75,"name":"event","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":-1,"name":"E","packageName":null,"typeArguments":[]}},{"id":76,"name":"once","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":130,"name":"TypedMethodDecorator","packageName":"@reciple/decorators","typeArguments":[{"kind":"reflection","properties":null,"signatures":[{"id":78,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":79,"name":"args","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"reference","id":-1,"name":"A","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"intrinsic","type":"any"}}],"methods":null}]}}]}],"interfaces":[{"id":137,"name":"RecipleModuleDecoratorMetadata","source":{"line":6,"file":"structures.ts","path":"types","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/types/structures.ts#L6"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[],"properties":[{"id":140,"name":"commands","source":{"line":9,"file":"structures.ts","path":"types","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/types/structures.ts#L9"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":137,"readonly":false,"optional":true,"type":{"kind":"array","type":{"kind":"reference","id":null,"name":"AnyCommandResolvable","packageName":null,"typeArguments":[]}}},{"id":142,"name":"events","source":{"line":11,"file":"structures.ts","path":"types","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/types/structures.ts#L11"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":137,"readonly":false,"optional":true,"type":{"kind":"reflection","properties":[{"id":144,"name":"client","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"reference","id":null,"name":"Collection","packageName":"@discordjs/collection","typeArguments":[{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"number"},{"kind":"intrinsic","type":"symbol"}]},{"kind":"array","type":{"kind":"union","types":[{"kind":"reflection","properties":[{"id":146,"name":"key","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]}},{"id":147,"name":"once","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"boolean"}}],"signatures":null,"methods":null},{"kind":"reflection","properties":null,"signatures":[{"id":149,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[],"returnType":{"kind":"intrinsic","type":"any"}}],"methods":null}]}}]}},{"id":156,"name":"rest","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"reference","id":null,"name":"Collection","packageName":"@discordjs/collection","typeArguments":[{"kind":"typeOperator","operator":"keyof","type":{"kind":"reference","id":null,"name":"RestEvents","packageName":"@discordjs/rest","typeArguments":[]}},{"kind":"array","type":{"kind":"union","types":[{"kind":"reflection","properties":[{"id":158,"name":"key","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]}},{"id":159,"name":"once","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"boolean"}}],"signatures":null,"methods":null},{"kind":"reflection","properties":null,"signatures":[{"id":161,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[],"returnType":{"kind":"intrinsic","type":"any"}}],"methods":null}]}}]}},{"id":150,"name":"ws","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"reference","id":null,"name":"Collection","packageName":"@discordjs/collection","typeArguments":[{"kind":"union","types":[{"kind":"intrinsic","type":"number"},{"kind":"query","query":{"kind":"reference","id":null,"name":"SymbolConstructor.iterator","packageName":"typescript","typeArguments":[]}},{"kind":"literal","value":"toString"},{"kind":"literal","value":"charAt"},{"kind":"literal","value":"charCodeAt"},{"kind":"literal","value":"concat"},{"kind":"literal","value":"indexOf"},{"kind":"literal","value":"lastIndexOf"},{"kind":"literal","value":"localeCompare"},{"kind":"literal","value":"match"},{"kind":"literal","value":"replace"},{"kind":"literal","value":"search"},{"kind":"literal","value":"slice"},{"kind":"literal","value":"split"},{"kind":"literal","value":"substring"},{"kind":"literal","value":"toLowerCase"},{"kind":"literal","value":"toLocaleLowerCase"},{"kind":"literal","value":"toUpperCase"},{"kind":"literal","value":"toLocaleUpperCase"},{"kind":"literal","value":"trim"},{"kind":"literal","value":"length"},{"kind":"literal","value":"substr"},{"kind":"literal","value":"valueOf"},{"kind":"literal","value":"codePointAt"},{"kind":"literal","value":"includes"},{"kind":"literal","value":"endsWith"},{"kind":"literal","value":"normalize"},{"kind":"literal","value":"repeat"},{"kind":"literal","value":"startsWith"},{"kind":"literal","value":"anchor"},{"kind":"literal","value":"big"},{"kind":"literal","value":"blink"},{"kind":"literal","value":"bold"},{"kind":"literal","value":"fixed"},{"kind":"literal","value":"fontcolor"},{"kind":"literal","value":"fontsize"},{"kind":"literal","value":"italics"},{"kind":"literal","value":"link"},{"kind":"literal","value":"small"},{"kind":"literal","value":"strike"},{"kind":"literal","value":"sub"},{"kind":"literal","value":"sup"},{"kind":"literal","value":"padStart"},{"kind":"literal","value":"padEnd"},{"kind":"literal","value":"trimEnd"},{"kind":"literal","value":"trimStart"},{"kind":"literal","value":"trimLeft"},{"kind":"literal","value":"trimRight"},{"kind":"literal","value":"matchAll"},{"kind":"literal","value":"replaceAll"},{"kind":"literal","value":"at"}]},{"kind":"array","type":{"kind":"union","types":[{"kind":"reflection","properties":[{"id":152,"name":"key","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]}},{"id":153,"name":"once","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":false,"type":{"kind":"intrinsic","type":"boolean"}}],"signatures":null,"methods":null},{"kind":"reflection","properties":null,"signatures":[{"id":155,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[],"returnType":{"kind":"intrinsic","type":"any"}}],"methods":null}]}}]}}],"signatures":null,"methods":null}},{"id":138,"name":"id","source":{"line":7,"file":"structures.ts","path":"types","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/types/structures.ts#L7"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":137,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"string"}},{"id":139,"name":"name","source":{"line":8,"file":"structures.ts","path":"types","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/types/structures.ts#L8"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":137,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"string"}},{"id":141,"name":"versions","source":{"line":10,"file":"structures.ts","path":"types","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/types/structures.ts#L10"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":137,"readonly":false,"optional":true,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"array","type":{"kind":"intrinsic","type":"string"}}]}}],"methods":[]},{"id":97,"name":"RecipleModuleEventDecoratorMap","source":{"line":6,"file":"events.ts","path":"decorators","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/decorators/events.ts#L6"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[],"properties":[{"id":99,"name":"rest","source":{"line":8,"file":"events.ts","path":"decorators","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/decorators/events.ts#L8"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":97,"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"RestEvents","packageName":"@discordjs/rest","typeArguments":[]}},{"id":98,"name":"ws","source":{"line":7,"file":"events.ts","path":"decorators","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/decorators/events.ts#L7"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":97,"readonly":false,"optional":false,"type":{"kind":"reference","id":null,"name":"Record","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"GatewayDispatchEvents","packageName":"discord-api-types","typeArguments":[]},{"kind":"tuple","types":[{"kind":"namedTupleMember","name":"data","type":{"kind":"intrinsic","type":"any"},"optional":false},{"kind":"namedTupleMember","name":"shardId","type":{"kind":"intrinsic","type":"number"},"optional":false}]}]}}],"methods":[]}],"namespaces":[],"typeAliases":[{"id":130,"name":"TypedMethodDecorator","source":{"line":4,"file":"structures.ts","path":"types","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/types/structures.ts#L4"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[{"id":136,"name":"T","constraint":null,"default":null}],"type":{"kind":"reflection","properties":null,"signatures":[{"id":132,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":133,"name":"target","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"Object","packageName":"typescript","typeArguments":[]}},{"id":134,"name":"propertyKey","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"union","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"symbol"}]}},{"id":135,"name":"descriptor","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"TypedPropertyDescriptor","packageName":"typescript","typeArguments":[{"kind":"reference","id":-1,"name":"T","packageName":null,"typeArguments":[]}]}}],"returnType":{"kind":"union","types":[{"kind":"reference","id":null,"name":"TypedPropertyDescriptor","packageName":"typescript","typeArguments":[{"kind":"reference","id":-1,"name":"T","packageName":null,"typeArguments":[]}]},{"kind":"intrinsic","type":"void"}]}}],"methods":null}}],"variables":[{"id":129,"name":"recipleModuleMetadataSymbol","source":{"line":1,"file":"constants.ts","path":"types","url":"https://github.com/thenorthsolution/Reciple/blob/109ea8a/packages/decorators/src/types/constants.ts#L1"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"type":{"kind":"query","query":{"kind":"reference","id":129,"name":"recipleModuleMetadataSymbol","packageName":"@reciple/decorators","typeArguments":[]}},"value":"..."}],"customPages":[],"parsedAt":1720928269567}
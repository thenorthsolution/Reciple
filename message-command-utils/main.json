{"typeDocJsonParserVersion":"9.0.1","id":0,"name":"@reciple/message-command-utils","version":null,"readme":"<h1 align=\"center\">\n    <img src=\"https://i.imgur.com/h0ljJR5.png\" width=\"50%\">\n    <br>\n</h1>\n\n<h3 align=\"center\">\n    <a href=\"https://discord.gg/2gyckrwK7b\">\n        <img src=\"https://img.shields.io/discord/1032785824686817291?color=5865F2&logo=discord&logoColor=white\">\n    </a>\n    <a href=\"https://npmjs.org/package/@reciple/core\">\n        <img src=\"https://img.shields.io/npm/v/%40reciple/core?label=npm\">\n    </a>\n    <a href=\"https://github.com/thenorthsolution/Reciple/tree/main/packages/core\">\n        <img src=\"https://img.shields.io/npm/dt/%40reciple/core?maxAge=3600\">\n    </a>\n    <a href=\"https://www.codefactor.io/repository/github/thenorthsolution/reciple\">\n        <img src=\"https://www.codefactor.io/repository/github/thenorthsolution/reciple/badge\">\n    </a>\n    <br>\n    <div style=\"padding-top: 1rem\">\n        <a href=\"https://discord.gg/2gyckrwK7b\n            <img src=\"http://invidget.switchblade.xyz/2gyckrwK7b\">\n        </a>\n    </div>\n</h3>\n\n---\n\n## About\n\n`@reciple/option-resolvers` is a library of built-in message command utilities for Reciple.\n","changelog":null,"classes":[{"id":272,"name":"BaseMessageCommandOptionBuilder","source":{"line":3,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L3"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"abstract":true,"extendsType":{"kind":"reference","id":null,"name":"Omit","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"MessageCommandOptionBuilder","packageName":null,"typeArguments":[{"kind":"reference","id":-1,"name":"T","packageName":null,"typeArguments":[]}]},{"kind":"union","types":[{"kind":"literal","value":"setName"},{"kind":"literal","value":"setDescription"},{"kind":"literal","value":"setRequired"},{"kind":"literal","value":"setResolveValue"},{"kind":"literal","value":"setValidate"}]}]},"implementsType":[],"typeParameters":[{"id":299,"name":"T","constraint":{"kind":"intrinsic","type":"any"},"default":{"kind":"intrinsic","type":"any"}}],"construct":{"id":278,"name":"constructor","source":{"line":9,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L9"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":272,"accessibility":"public","parameters":[{"id":281,"name":"data","comment":{"description":"Optional data to initialize the builder with.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"any"}}]},"properties":[{"id":291,"name":"resolve_value","source":{"line":43,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L43"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":272,"accessibility":"public","abstract":true,"static":false,"readonly":true,"optional":true,"type":{"kind":"reflection","properties":null,"signatures":[{"id":293,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":294,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionBuilderResolveValueOptions","packageName":null,"typeArguments":[{"kind":"reference","id":-1,"name":"T","packageName":null,"typeArguments":[]}]}}],"returnType":{"kind":"intrinsic","type":"any"}}],"methods":null}},{"id":295,"name":"validate","source":{"line":44,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L44"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":272,"accessibility":"public","abstract":true,"static":false,"readonly":true,"optional":true,"type":{"kind":"reflection","properties":null,"signatures":[{"id":297,"name":"__type","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":298,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionBuilderResolveValueOptions","packageName":null,"typeArguments":[{"kind":"reference","id":-1,"name":"T","packageName":null,"typeArguments":[]}]}}],"returnType":{"kind":"intrinsic","type":"any"}}],"methods":null}}],"methods":[{"id":285,"name":"setDescription","source":{"line":27,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L27"},"parentId":272,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":286,"name":"setDescription","comment":{"description":"Sets the description of the option.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":287,"name":"description","comment":{"description":"Description of the option.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"returnType":{"kind":"reference","id":272,"name":"BaseMessageCommandOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[{"kind":"reference","id":-1,"name":"T","packageName":null,"typeArguments":[]}]}}]},{"id":282,"name":"setName","source":{"line":17,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L17"},"parentId":272,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":283,"name":"setName","comment":{"description":"Sets the name of the option.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":284,"name":"name","comment":{"description":"Name of the options.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"returnType":{"kind":"reference","id":272,"name":"BaseMessageCommandOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[{"kind":"reference","id":-1,"name":"T","packageName":null,"typeArguments":[]}]}}]},{"id":288,"name":"setRequired","source":{"line":37,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L37"},"parentId":272,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":289,"name":"setRequired","comment":{"description":"Sets whether the option is required.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":290,"name":"required","comment":{"description":"Option is required.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":272,"name":"BaseMessageCommandOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[{"kind":"reference","id":-1,"name":"T","packageName":null,"typeArguments":[]}]}}]},{"id":273,"name":"resolveOption","source":{"line":46,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L46"},"parentId":272,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":274,"name":"resolveOption","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":275,"name":"name","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":276,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":277,"name":"required","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"intrinsic","type":"any"}]}}]}]},{"id":2,"name":"MessageCommandBooleanOptionBuilder","source":{"line":7,"file":"MessageCommandBooleanOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandBooleanOptionBuilder.ts#L7"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"abstract":false,"extendsType":{"kind":"reference","id":272,"name":"BaseMessageCommandOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[{"kind":"intrinsic","type":"boolean"}]},"implementsType":[{"kind":"reference","id":1,"name":"MessageCommandBooleanOptionBuilderData","packageName":"@reciple/message-command-utils","typeArguments":[]}],"typeParameters":[],"construct":{"id":16,"name":"constructor","source":{"line":8,"file":"MessageCommandBooleanOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandBooleanOptionBuilder.ts#L8"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":2,"accessibility":"public","parameters":[{"id":18,"name":"data","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":1,"name":"MessageCommandBooleanOptionBuilderData","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},"properties":[],"methods":[{"id":19,"name":"resolve_value","source":{"line":12,"file":"MessageCommandBooleanOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandBooleanOptionBuilder.ts#L12"},"parentId":2,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":20,"name":"resolve_value","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":21,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionBuilderResolveValueOptions","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"intrinsic","type":"boolean"}}]},{"id":28,"name":"setDescription","source":{"line":27,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L27"},"parentId":2,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":29,"name":"setDescription","comment":{"description":"Sets the description of the option.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":30,"name":"description","comment":{"description":"Description of the option.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"returnType":{"kind":"reference","id":2,"name":"MessageCommandBooleanOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":25,"name":"setName","source":{"line":17,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L17"},"parentId":2,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":26,"name":"setName","comment":{"description":"Sets the name of the option.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":27,"name":"name","comment":{"description":"Name of the options.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"returnType":{"kind":"reference","id":2,"name":"MessageCommandBooleanOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":31,"name":"setRequired","source":{"line":37,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L37"},"parentId":2,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":32,"name":"setRequired","comment":{"description":"Sets whether the option is required.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":33,"name":"required","comment":{"description":"Option is required.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":2,"name":"MessageCommandBooleanOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":22,"name":"validate","source":{"line":16,"file":"MessageCommandBooleanOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandBooleanOptionBuilder.ts#L16"},"parentId":2,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":23,"name":"validate","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":24,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionBuilderResolveValueOptions","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"union","types":[{"kind":"intrinsic","type":"boolean"},{"kind":"reference","id":null,"name":"Error","packageName":"typescript","typeArguments":[]}]}}]},{"id":3,"name":"resolveOption","source":{"line":21,"file":"MessageCommandBooleanOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandBooleanOptionBuilder.ts#L21"},"parentId":2,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":4,"name":"resolveOption","comment":{"description":"Asynchronously resolves a boolean option from the given manager.","blockTags":[{"name":"returns","text":"- A promise that resolves to the resolved boolean value, or null if the option is not present and not required."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":5,"name":"name","comment":{"description":"The name of the option to resolve.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":6,"name":"options","comment":{"description":"The option manager to resolve from.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":7,"name":"required","comment":{"description":"Whether the option is required or not.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"literal","value":"false"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"intrinsic","type":"boolean"}]}]}},{"id":8,"name":"resolveOption","comment":{"description":"Asynchronously resolves a boolean option from the given manager.","blockTags":[{"name":"returns","text":"- A promise that resolves to the resolved boolean value, or null if the option is not present and not required."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":9,"name":"name","comment":{"description":"The name of the option to resolve.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":10,"name":"options","comment":{"description":"The option manager to resolve from.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":11,"name":"required","comment":{"description":"Whether the option is required or not.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"literal","value":"true"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"intrinsic","type":"boolean"}]}},{"id":12,"name":"resolveOption","comment":{"description":"Asynchronously resolves a boolean option from the given manager.","blockTags":[{"name":"returns","text":"- A promise that resolves to the resolved boolean value, or null if the option is not present and not required."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":13,"name":"name","comment":{"description":"The name of the option to resolve.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":14,"name":"options","comment":{"description":"The option manager to resolve from.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":15,"name":"required","comment":{"description":"Whether the option is required or not.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"intrinsic","type":"boolean"}]}]}}]}]},{"id":37,"name":"MessageCommandChannelOptionBuilder","source":{"line":11,"file":"MessageCommandChannelOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandChannelOptionBuilder.ts#L11"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"abstract":false,"extendsType":{"kind":"reference","id":272,"name":"BaseMessageCommandOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[{"kind":"union","types":[{"kind":"reference","id":null,"name":"Channel","packageName":"discord.js","typeArguments":[]},{"kind":"literal","value":"null"}]}]},"implementsType":[{"kind":"reference","id":34,"name":"MessageCommandChannelOptionBuilderData","packageName":"@reciple/message-command-utils","typeArguments":[]}],"typeParameters":[],"construct":{"id":43,"name":"constructor","source":{"line":15,"file":"MessageCommandChannelOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandChannelOptionBuilder.ts#L15"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":37,"accessibility":"public","parameters":[{"id":45,"name":"data","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":34,"name":"MessageCommandChannelOptionBuilderData","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},"properties":[{"id":47,"name":"allow_outside_channels","source":{"line":13,"file":"MessageCommandChannelOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandChannelOptionBuilder.ts#L13"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":37,"accessibility":"public","abstract":false,"static":false,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}},{"id":46,"name":"channel_types","source":{"line":12,"file":"MessageCommandChannelOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandChannelOptionBuilder.ts#L12"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":37,"accessibility":"public","abstract":false,"static":false,"readonly":false,"optional":false,"type":{"kind":"array","type":{"kind":"reference","id":null,"name":"ChannelType","packageName":"discord-api-types","typeArguments":[]}}}],"methods":[{"id":51,"name":"addChannelTypes","source":{"line":38,"file":"MessageCommandChannelOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandChannelOptionBuilder.ts#L38"},"parentId":37,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":52,"name":"addChannelTypes","comment":{"description":"Adds channel types to the MessageCommandChannelOptionBuilder.","blockTags":[{"name":"returns","text":"- The updated MessageCommandChannelOptionBuilder instance."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":53,"name":"channel_types","comment":{"description":"The channel types to add.","blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"reference","id":null,"name":"RestOrArray","packageName":"@discordjs/builders","typeArguments":[{"kind":"reference","id":null,"name":"ChannelType","packageName":"discord-api-types","typeArguments":[]}]}}],"returnType":{"kind":"reference","id":37,"name":"MessageCommandChannelOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":57,"name":"resolve_value","source":{"line":54,"file":"MessageCommandChannelOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandChannelOptionBuilder.ts#L54"},"parentId":37,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":58,"name":"resolve_value","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":59,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionBuilderResolveValueOptions","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"reference","id":null,"name":"Channel","packageName":"discord.js","typeArguments":[]}]}]}}]},{"id":54,"name":"setAllowOutsideChannels","source":{"line":49,"file":"MessageCommandChannelOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandChannelOptionBuilder.ts#L49"},"parentId":37,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":55,"name":"setAllowOutsideChannels","comment":{"description":"Sets the value of allow_outside_channels to the provided boolean value.","blockTags":[{"name":"returns","text":"- The updated instance of the class."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":56,"name":"allow_outside_channels","comment":{"description":"The boolean value to set. If not provided, the value will be undefined.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":37,"name":"MessageCommandChannelOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":48,"name":"setChannelTypes","source":{"line":27,"file":"MessageCommandChannelOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandChannelOptionBuilder.ts#L27"},"parentId":37,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":49,"name":"setChannelTypes","comment":{"description":"Sets the channel types for the MessageCommandChannelOptionBuilder.","blockTags":[{"name":"returns","text":"- The updated MessageCommandChannelOptionBuilder instance."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":50,"name":"channel_types","comment":{"description":"The channel types to set.","blockTags":[],"modifierTags":[]},"rest":true,"optional":false,"type":{"kind":"reference","id":null,"name":"RestOrArray","packageName":"@discordjs/builders","typeArguments":[{"kind":"reference","id":null,"name":"ChannelType","packageName":"discord-api-types","typeArguments":[]}]}}],"returnType":{"kind":"reference","id":37,"name":"MessageCommandChannelOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":66,"name":"setDescription","source":{"line":27,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L27"},"parentId":37,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":67,"name":"setDescription","comment":{"description":"Sets the description of the option.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":68,"name":"description","comment":{"description":"Description of the option.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"returnType":{"kind":"reference","id":37,"name":"MessageCommandChannelOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":63,"name":"setName","source":{"line":17,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L17"},"parentId":37,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":64,"name":"setName","comment":{"description":"Sets the name of the option.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":65,"name":"name","comment":{"description":"Name of the options.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"returnType":{"kind":"reference","id":37,"name":"MessageCommandChannelOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":69,"name":"setRequired","source":{"line":37,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L37"},"parentId":37,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":70,"name":"setRequired","comment":{"description":"Sets whether the option is required.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":71,"name":"required","comment":{"description":"Option is required.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":37,"name":"MessageCommandChannelOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":60,"name":"validate","source":{"line":58,"file":"MessageCommandChannelOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandChannelOptionBuilder.ts#L58"},"parentId":37,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":61,"name":"validate","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":62,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionBuilderResolveValueOptions","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"intrinsic","type":"boolean"},{"kind":"reference","id":null,"name":"Error","packageName":"typescript","typeArguments":[]}]}]}}]},{"id":38,"name":"resolveOption","source":{"line":81,"file":"MessageCommandChannelOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandChannelOptionBuilder.ts#L81"},"parentId":37,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":39,"name":"resolveOption","comment":{"description":"Asynchronously resolves a channel option from the given manager.","blockTags":[{"name":"returns","text":"- A promise that resolves to the resolved channel or null."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":40,"name":"name","comment":{"description":"The name of the option to resolve.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":41,"name":"options","comment":{"description":"The option manager to resolve from.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":42,"name":"required","comment":{"description":"Whether the option is required or not.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"reference","id":null,"name":"Channel","packageName":"discord.js","typeArguments":[]}]}]}}]}]},{"id":75,"name":"MessageCommandIntegerOptionBuilder","source":{"line":9,"file":"MessageCommandIntegerOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandIntegerOptionBuilder.ts#L9"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"abstract":false,"extendsType":{"kind":"reference","id":272,"name":"BaseMessageCommandOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[{"kind":"intrinsic","type":"number"}]},"implementsType":[{"kind":"reference","id":72,"name":"MessageCommandIntegerOptionBuilderData","packageName":"@reciple/message-command-utils","typeArguments":[]}],"typeParameters":[],"construct":{"id":89,"name":"constructor","source":{"line":13,"file":"MessageCommandIntegerOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandIntegerOptionBuilder.ts#L13"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":75,"accessibility":"public","parameters":[{"id":91,"name":"data","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":72,"name":"MessageCommandIntegerOptionBuilderData","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},"properties":[{"id":92,"name":"max_value","source":{"line":10,"file":"MessageCommandIntegerOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandIntegerOptionBuilder.ts#L10"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":75,"accessibility":"public","abstract":false,"static":false,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"number"}},{"id":93,"name":"min_value","source":{"line":11,"file":"MessageCommandIntegerOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandIntegerOptionBuilder.ts#L11"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":75,"accessibility":"public","abstract":false,"static":false,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"number"}}],"methods":[{"id":100,"name":"resolve_value","source":{"line":42,"file":"MessageCommandIntegerOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandIntegerOptionBuilder.ts#L42"},"parentId":75,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":101,"name":"resolve_value","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":102,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionBuilderResolveValueOptions","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"intrinsic","type":"number"}}]},{"id":109,"name":"setDescription","source":{"line":27,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L27"},"parentId":75,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":110,"name":"setDescription","comment":{"description":"Sets the description of the option.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":111,"name":"description","comment":{"description":"Description of the option.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"returnType":{"kind":"reference","id":75,"name":"MessageCommandIntegerOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":94,"name":"setMaxValue","source":{"line":26,"file":"MessageCommandIntegerOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandIntegerOptionBuilder.ts#L26"},"parentId":75,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":95,"name":"setMaxValue","comment":{"description":"Sets the maximum value for this option.","blockTags":[{"name":"returns","text":"- Returns the current object for method chaining."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":96,"name":"maxValue","comment":{"description":"The maximum value to set. If not provided, the maximum value will be unset.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"number"}}],"returnType":{"kind":"reference","id":75,"name":"MessageCommandIntegerOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":97,"name":"setMinValue","source":{"line":37,"file":"MessageCommandIntegerOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandIntegerOptionBuilder.ts#L37"},"parentId":75,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":98,"name":"setMinValue","comment":{"description":"Sets the minimum value for this option.","blockTags":[{"name":"returns","text":"- Returns the current object for method chaining."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":99,"name":"minValue","comment":{"description":"The minimum value to set. If not provided, the minimum value will be unset.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"number"}}],"returnType":{"kind":"reference","id":75,"name":"MessageCommandIntegerOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":106,"name":"setName","source":{"line":17,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L17"},"parentId":75,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":107,"name":"setName","comment":{"description":"Sets the name of the option.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":108,"name":"name","comment":{"description":"Name of the options.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"returnType":{"kind":"reference","id":75,"name":"MessageCommandIntegerOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":112,"name":"setRequired","source":{"line":37,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L37"},"parentId":75,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":113,"name":"setRequired","comment":{"description":"Sets whether the option is required.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":114,"name":"required","comment":{"description":"Option is required.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":75,"name":"MessageCommandIntegerOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":103,"name":"validate","source":{"line":46,"file":"MessageCommandIntegerOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandIntegerOptionBuilder.ts#L46"},"parentId":75,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":104,"name":"validate","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":105,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionBuilderResolveValueOptions","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"union","types":[{"kind":"intrinsic","type":"boolean"},{"kind":"reference","id":null,"name":"Error","packageName":"typescript","typeArguments":[]}]}}]},{"id":76,"name":"resolveOption","source":{"line":55,"file":"MessageCommandIntegerOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandIntegerOptionBuilder.ts#L55"},"parentId":75,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":77,"name":"resolveOption","comment":{"description":"Asynchronously resolves an integer option from the given option manager.","blockTags":[{"name":"returns","text":"- A promise that resolves to the resolved integer value, or null if the option is not present or not valid."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":78,"name":"name","comment":{"description":"The name of the option to resolve.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":79,"name":"options","comment":{"description":"The option manager to resolve from.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":80,"name":"required","comment":{"description":"Whether the option is required or not.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"literal","value":"false"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"intrinsic","type":"number"}]}]}},{"id":81,"name":"resolveOption","comment":{"description":"Asynchronously resolves an integer option from the given option manager.","blockTags":[{"name":"returns","text":"- A promise that resolves to the resolved integer value, or null if the option is not present or not valid."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":82,"name":"name","comment":{"description":"The name of the option to resolve.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":83,"name":"options","comment":{"description":"The option manager to resolve from.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":84,"name":"required","comment":{"description":"Whether the option is required or not.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"literal","value":"true"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"intrinsic","type":"number"}]}},{"id":85,"name":"resolveOption","comment":{"description":"Asynchronously resolves an integer option from the given option manager.","blockTags":[{"name":"returns","text":"- A promise that resolves to the resolved integer value, or null if the option is not present or not valid."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":86,"name":"name","comment":{"description":"The name of the option to resolve.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":87,"name":"options","comment":{"description":"The option manager to resolve from.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":88,"name":"required","comment":{"description":"Whether the option is required or not.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"intrinsic","type":"number"}]}]}}]}]},{"id":118,"name":"MessageCommandMessageOptionBuilder","source":{"line":11,"file":"MessageCommandMessageOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandMessageOptionBuilder.ts#L11"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"abstract":false,"extendsType":{"kind":"reference","id":272,"name":"BaseMessageCommandOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[{"kind":"reference","id":null,"name":"Message","packageName":"discord.js","typeArguments":[]}]},"implementsType":[{"kind":"reference","id":115,"name":"MessageCommandMessageOptionBuilderData","packageName":"@reciple/message-command-utils","typeArguments":[]}],"typeParameters":[],"construct":{"id":135,"name":"constructor","source":{"line":15,"file":"MessageCommandMessageOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandMessageOptionBuilder.ts#L15"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":118,"accessibility":"public","parameters":[{"id":137,"name":"data","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":115,"name":"MessageCommandMessageOptionBuilderData","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},"properties":[{"id":139,"name":"allow_bot_messages","source":{"line":13,"file":"MessageCommandMessageOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandMessageOptionBuilder.ts#L13"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":118,"accessibility":"public","abstract":false,"static":false,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}},{"id":138,"name":"allow_outside_messages","source":{"line":12,"file":"MessageCommandMessageOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandMessageOptionBuilder.ts#L12"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":118,"accessibility":"public","abstract":false,"static":false,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"methods":[{"id":146,"name":"resolve_value","source":{"line":41,"file":"MessageCommandMessageOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandMessageOptionBuilder.ts#L41"},"parentId":118,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":147,"name":"resolve_value","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":148,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionBuilderResolveValueOptions","packageName":null,"typeArguments":[{"kind":"reference","id":null,"name":"Message","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]}]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"Message","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]}]}}]},{"id":143,"name":"setAllowBotMessages","source":{"line":36,"file":"MessageCommandMessageOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandMessageOptionBuilder.ts#L36"},"parentId":118,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":144,"name":"setAllowBotMessages","comment":{"description":"Sets the value of allow_bot_messages to the provided boolean value.","blockTags":[{"name":"returns","text":"- The updated instance of the class."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":145,"name":"allowBotMessages","comment":{"description":"The boolean value to set. If not provided, the value will be undefined.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":118,"name":"MessageCommandMessageOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":140,"name":"setAllowOutsideMessages","source":{"line":25,"file":"MessageCommandMessageOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandMessageOptionBuilder.ts#L25"},"parentId":118,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":141,"name":"setAllowOutsideMessages","comment":{"description":"Sets the value of allow_outside_messages to the provided boolean value.","blockTags":[{"name":"returns","text":"- The updated instance of the class."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":142,"name":"allowOutsideMessages","comment":{"description":"The boolean value to set. If not provided, the value will be undefined.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":118,"name":"MessageCommandMessageOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":155,"name":"setDescription","source":{"line":27,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L27"},"parentId":118,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":156,"name":"setDescription","comment":{"description":"Sets the description of the option.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":157,"name":"description","comment":{"description":"Description of the option.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"returnType":{"kind":"reference","id":118,"name":"MessageCommandMessageOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":152,"name":"setName","source":{"line":17,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L17"},"parentId":118,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":153,"name":"setName","comment":{"description":"Sets the name of the option.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":154,"name":"name","comment":{"description":"Name of the options.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"returnType":{"kind":"reference","id":118,"name":"MessageCommandMessageOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":158,"name":"setRequired","source":{"line":37,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L37"},"parentId":118,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":159,"name":"setRequired","comment":{"description":"Sets whether the option is required.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":160,"name":"required","comment":{"description":"Option is required.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":118,"name":"MessageCommandMessageOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":149,"name":"validate","source":{"line":46,"file":"MessageCommandMessageOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandMessageOptionBuilder.ts#L46"},"parentId":118,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":150,"name":"validate","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":151,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionBuilderResolveValueOptions","packageName":null,"typeArguments":[{"kind":"reference","id":null,"name":"Message","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]}]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"intrinsic","type":"boolean"},{"kind":"reference","id":null,"name":"Error","packageName":"typescript","typeArguments":[]}]}]}}]},{"id":119,"name":"fetchMessageFromOptions","source":{"line":62,"file":"MessageCommandMessageOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandMessageOptionBuilder.ts#L62"},"parentId":118,"accessibility":"protected","abstract":false,"static":true,"signatures":[{"id":120,"name":"fetchMessageFromOptions","comment":{"description":"Fetches a message from the given options.","blockTags":[{"name":"returns","text":"A promise that resolves to the fetched message or null if not found."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":121,"name":"options","comment":{"description":"The options containing the value to fetch.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionBuilderResolveValueOptions","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"reference","id":null,"name":"Message","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]}]}]}}]},{"id":122,"name":"resolveOption","source":{"line":75,"file":"MessageCommandMessageOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandMessageOptionBuilder.ts#L75"},"parentId":118,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":123,"name":"resolveOption","comment":{"description":"Resolves a message option from the given options object.","blockTags":[{"name":"returns","text":"- A promise that resolves to the resolved message or null if the option is not present and not required."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":124,"name":"name","comment":{"description":"The name of the option to resolve.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":125,"name":"options","comment":{"description":"The options object containing the option.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":126,"name":"required","comment":{"description":"Whether the option is required or not.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"literal","value":"false"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"reference","id":null,"name":"Message","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]}]}]}},{"id":127,"name":"resolveOption","comment":{"description":"Resolves a message option from the given options object.","blockTags":[{"name":"returns","text":"- A promise that resolves to the resolved message or null if the option is not present and not required."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":128,"name":"name","comment":{"description":"The name of the option to resolve.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":129,"name":"options","comment":{"description":"The options object containing the option.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":130,"name":"required","comment":{"description":"Whether the option is required or not.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"literal","value":"true"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"Message","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]}]}},{"id":131,"name":"resolveOption","comment":{"description":"Resolves a message option from the given options object.","blockTags":[{"name":"returns","text":"- A promise that resolves to the resolved message or null if the option is not present and not required."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":132,"name":"name","comment":{"description":"The name of the option to resolve.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":133,"name":"options","comment":{"description":"The options object containing the option.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":134,"name":"required","comment":{"description":"Whether the option is required or not.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"reference","id":null,"name":"Message","packageName":"discord.js","typeArguments":[{"kind":"intrinsic","type":"boolean"}]}]}]}}]}]},{"id":164,"name":"MessageCommandNumberOptionBuilder","source":{"line":9,"file":"MessageCommandNumberOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandNumberOptionBuilder.ts#L9"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"abstract":false,"extendsType":{"kind":"reference","id":272,"name":"BaseMessageCommandOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[{"kind":"intrinsic","type":"number"}]},"implementsType":[{"kind":"reference","id":161,"name":"MessageCommandNumberOptionBuilderData","packageName":"@reciple/message-command-utils","typeArguments":[]}],"typeParameters":[],"construct":{"id":178,"name":"constructor","source":{"line":13,"file":"MessageCommandNumberOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandNumberOptionBuilder.ts#L13"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":164,"accessibility":"public","parameters":[{"id":180,"name":"data","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":161,"name":"MessageCommandNumberOptionBuilderData","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},"properties":[{"id":181,"name":"max_value","source":{"line":10,"file":"MessageCommandNumberOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandNumberOptionBuilder.ts#L10"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":164,"accessibility":"public","abstract":false,"static":false,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"number"}},{"id":182,"name":"min_value","source":{"line":11,"file":"MessageCommandNumberOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandNumberOptionBuilder.ts#L11"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":164,"accessibility":"public","abstract":false,"static":false,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"number"}}],"methods":[{"id":189,"name":"resolve_value","source":{"line":42,"file":"MessageCommandNumberOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandNumberOptionBuilder.ts#L42"},"parentId":164,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":190,"name":"resolve_value","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":191,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionBuilderResolveValueOptions","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"intrinsic","type":"number"}}]},{"id":198,"name":"setDescription","source":{"line":27,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L27"},"parentId":164,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":199,"name":"setDescription","comment":{"description":"Sets the description of the option.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":200,"name":"description","comment":{"description":"Description of the option.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"returnType":{"kind":"reference","id":164,"name":"MessageCommandNumberOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":183,"name":"setMaxValue","source":{"line":26,"file":"MessageCommandNumberOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandNumberOptionBuilder.ts#L26"},"parentId":164,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":184,"name":"setMaxValue","comment":{"description":"Sets the maximum value for this option.","blockTags":[{"name":"returns","text":"- Returns the current object for method chaining."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":185,"name":"maxValue","comment":{"description":"The maximum value to set. If not provided, the maximum value will be unset.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"number"}}],"returnType":{"kind":"reference","id":164,"name":"MessageCommandNumberOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":186,"name":"setMinValue","source":{"line":37,"file":"MessageCommandNumberOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandNumberOptionBuilder.ts#L37"},"parentId":164,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":187,"name":"setMinValue","comment":{"description":"Sets the minimum value for this option.","blockTags":[{"name":"returns","text":"- Returns the current object for method chaining."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":188,"name":"minValue","comment":{"description":"The minimum value to set. If not provided, the minimum value will be unset.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"number"}}],"returnType":{"kind":"reference","id":164,"name":"MessageCommandNumberOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":195,"name":"setName","source":{"line":17,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L17"},"parentId":164,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":196,"name":"setName","comment":{"description":"Sets the name of the option.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":197,"name":"name","comment":{"description":"Name of the options.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"returnType":{"kind":"reference","id":164,"name":"MessageCommandNumberOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":201,"name":"setRequired","source":{"line":37,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L37"},"parentId":164,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":202,"name":"setRequired","comment":{"description":"Sets whether the option is required.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":203,"name":"required","comment":{"description":"Option is required.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":164,"name":"MessageCommandNumberOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":192,"name":"validate","source":{"line":46,"file":"MessageCommandNumberOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandNumberOptionBuilder.ts#L46"},"parentId":164,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":193,"name":"validate","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":194,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionBuilderResolveValueOptions","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"union","types":[{"kind":"intrinsic","type":"boolean"},{"kind":"reference","id":null,"name":"Error","packageName":"typescript","typeArguments":[]}]}}]},{"id":165,"name":"resolveOption","source":{"line":55,"file":"MessageCommandNumberOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandNumberOptionBuilder.ts#L55"},"parentId":164,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":166,"name":"resolveOption","comment":{"description":"Asynchronously resolves a number option from the given manager.","blockTags":[{"name":"returns","text":"- A promise that resolves to the resolved number value, or null if the option is not present and not required."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":167,"name":"name","comment":{"description":"The name of the option to resolve.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":168,"name":"options","comment":{"description":"The option manager to resolve from.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":169,"name":"required","comment":{"description":"Whether the option is required or not.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"literal","value":"false"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"intrinsic","type":"number"}]}]}},{"id":170,"name":"resolveOption","comment":{"description":"Asynchronously resolves a number option from the given manager.","blockTags":[{"name":"returns","text":"- A promise that resolves to the resolved number value, or null if the option is not present and not required."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":171,"name":"name","comment":{"description":"The name of the option to resolve.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":172,"name":"options","comment":{"description":"The option manager to resolve from.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":173,"name":"required","comment":{"description":"Whether the option is required or not.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"literal","value":"true"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"intrinsic","type":"number"}]}},{"id":174,"name":"resolveOption","comment":{"description":"Asynchronously resolves a number option from the given manager.","blockTags":[{"name":"returns","text":"- A promise that resolves to the resolved number value, or null if the option is not present and not required."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":175,"name":"name","comment":{"description":"The name of the option to resolve.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":176,"name":"options","comment":{"description":"The option manager to resolve from.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":177,"name":"required","comment":{"description":"Whether the option is required or not.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"intrinsic","type":"number"}]}]}}]}]},{"id":206,"name":"MessageCommandRoleOptionBuilder","source":{"line":10,"file":"MessageCommandRoleOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandRoleOptionBuilder.ts#L10"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"abstract":false,"extendsType":{"kind":"reference","id":272,"name":"BaseMessageCommandOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[{"kind":"union","types":[{"kind":"reference","id":null,"name":"Role","packageName":"discord.js","typeArguments":[]},{"kind":"literal","value":"null"}]}]},"implementsType":[{"kind":"reference","id":204,"name":"MessageCommandRoleOptionBuilderData","packageName":"@reciple/message-command-utils","typeArguments":[]}],"typeParameters":[],"construct":{"id":212,"name":"constructor","source":{"line":13,"file":"MessageCommandRoleOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandRoleOptionBuilder.ts#L13"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":206,"accessibility":"public","parameters":[{"id":214,"name":"data","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":204,"name":"MessageCommandRoleOptionBuilderData","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},"properties":[{"id":215,"name":"allow_everyone","source":{"line":11,"file":"MessageCommandRoleOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandRoleOptionBuilder.ts#L11"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":206,"accessibility":"public","abstract":false,"static":false,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"methods":[{"id":219,"name":"resolve_value","source":{"line":29,"file":"MessageCommandRoleOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandRoleOptionBuilder.ts#L29"},"parentId":206,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":220,"name":"resolve_value","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":221,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionBuilderResolveValueOptions","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"reference","id":null,"name":"Role","packageName":"discord.js","typeArguments":[]}]}]}}]},{"id":216,"name":"setAllowEveryone","source":{"line":24,"file":"MessageCommandRoleOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandRoleOptionBuilder.ts#L24"},"parentId":206,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":217,"name":"setAllowEveryone","comment":{"description":"Sets the value of `allow_everyone` to the provided `allowEveryone` parameter and returns the current instance.","blockTags":[{"name":"returns","text":"The current instance of the class."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":218,"name":"allowEveryone","comment":{"description":"The value to set `allow_everyone` to. If not provided, `allow_everyone` will be set to `undefined`.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":206,"name":"MessageCommandRoleOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":228,"name":"setDescription","source":{"line":27,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L27"},"parentId":206,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":229,"name":"setDescription","comment":{"description":"Sets the description of the option.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":230,"name":"description","comment":{"description":"Description of the option.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"returnType":{"kind":"reference","id":206,"name":"MessageCommandRoleOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":225,"name":"setName","source":{"line":17,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L17"},"parentId":206,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":226,"name":"setName","comment":{"description":"Sets the name of the option.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":227,"name":"name","comment":{"description":"Name of the options.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"returnType":{"kind":"reference","id":206,"name":"MessageCommandRoleOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":231,"name":"setRequired","source":{"line":37,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L37"},"parentId":206,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":232,"name":"setRequired","comment":{"description":"Sets whether the option is required.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":233,"name":"required","comment":{"description":"Option is required.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":206,"name":"MessageCommandRoleOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":222,"name":"validate","source":{"line":33,"file":"MessageCommandRoleOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandRoleOptionBuilder.ts#L33"},"parentId":206,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":223,"name":"validate","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":224,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionBuilderResolveValueOptions","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"intrinsic","type":"boolean"},{"kind":"reference","id":null,"name":"Error","packageName":"typescript","typeArguments":[]}]}]}}]},{"id":207,"name":"resolveOption","source":{"line":51,"file":"MessageCommandRoleOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandRoleOptionBuilder.ts#L51"},"parentId":206,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":208,"name":"resolveOption","comment":{"description":"Asynchronously resolves a role option from the given option manager.","blockTags":[{"name":"returns","text":"- A promise that resolves to the resolved role value, or null if the option is not present and not required."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":209,"name":"name","comment":{"description":"The name of the option to resolve.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":210,"name":"options","comment":{"description":"The option manager to resolve from.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":211,"name":"required","comment":{"description":"Whether the option is required or not.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"reference","id":null,"name":"Role","packageName":"discord.js","typeArguments":[]}]}]}}]}]},{"id":236,"name":"MessageCommandUserOptionBuilder","source":{"line":10,"file":"MessageCommandUserOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandUserOptionBuilder.ts#L10"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"abstract":false,"extendsType":{"kind":"reference","id":272,"name":"BaseMessageCommandOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[{"kind":"reference","id":null,"name":"User","packageName":"discord.js","typeArguments":[]}]},"implementsType":[{"kind":"reference","id":234,"name":"MessageCommandUserOptionBuilderData","packageName":"@reciple/message-command-utils","typeArguments":[]}],"typeParameters":[],"construct":{"id":250,"name":"constructor","source":{"line":13,"file":"MessageCommandUserOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandUserOptionBuilder.ts#L13"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":236,"accessibility":"public","parameters":[{"id":252,"name":"data","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":234,"name":"MessageCommandUserOptionBuilderData","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},"properties":[{"id":253,"name":"allow_bots","source":{"line":11,"file":"MessageCommandUserOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandUserOptionBuilder.ts#L11"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":236,"accessibility":"public","abstract":false,"static":false,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"methods":[{"id":257,"name":"resolve_value","source":{"line":30,"file":"MessageCommandUserOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandUserOptionBuilder.ts#L30"},"parentId":236,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":258,"name":"resolve_value","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":259,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionBuilderResolveValueOptions","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"User","packageName":"discord.js","typeArguments":[]}]}}]},{"id":254,"name":"setAllowBots","source":{"line":25,"file":"MessageCommandUserOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandUserOptionBuilder.ts#L25"},"parentId":236,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":255,"name":"setAllowBots","comment":{"description":"Sets the value of `allow_bots` property and returns the current instance.","blockTags":[{"name":"returns","text":"The current instance of the class."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":256,"name":"allowBots","comment":{"description":"The new value for `allow_bots`. If not provided, it will be set to `undefined`.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":236,"name":"MessageCommandUserOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":266,"name":"setDescription","source":{"line":27,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L27"},"parentId":236,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":267,"name":"setDescription","comment":{"description":"Sets the description of the option.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":268,"name":"description","comment":{"description":"Description of the option.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"returnType":{"kind":"reference","id":236,"name":"MessageCommandUserOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":263,"name":"setName","source":{"line":17,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L17"},"parentId":236,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":264,"name":"setName","comment":{"description":"Sets the name of the option.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":265,"name":"name","comment":{"description":"Name of the options.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}}],"returnType":{"kind":"reference","id":236,"name":"MessageCommandUserOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":269,"name":"setRequired","source":{"line":37,"file":"BaseMessageCommandOptionBuilder.ts","path":"classes/structures","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/structures/BaseMessageCommandOptionBuilder.ts#L37"},"parentId":236,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":270,"name":"setRequired","comment":{"description":"Sets whether the option is required.","blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":271,"name":"required","comment":{"description":"Option is required.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":236,"name":"MessageCommandUserOptionBuilder","packageName":"@reciple/message-command-utils","typeArguments":[]}}]},{"id":260,"name":"validate","source":{"line":34,"file":"MessageCommandUserOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandUserOptionBuilder.ts#L34"},"parentId":236,"accessibility":"public","abstract":false,"static":false,"signatures":[{"id":261,"name":"validate","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":262,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionBuilderResolveValueOptions","packageName":null,"typeArguments":[]}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"intrinsic","type":"boolean"},{"kind":"reference","id":null,"name":"Error","packageName":"typescript","typeArguments":[]}]}]}}]},{"id":237,"name":"resolveOption","source":{"line":44,"file":"MessageCommandUserOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandUserOptionBuilder.ts#L44"},"parentId":236,"accessibility":"public","abstract":false,"static":true,"signatures":[{"id":238,"name":"resolveOption","comment":{"description":"Asynchronously resolves a user option from the given manager.","blockTags":[{"name":"returns","text":"- A promise that resolves to the resolved user value, or null if the option is not present and not required."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":239,"name":"name","comment":{"description":"The name of the option to resolve.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":240,"name":"options","comment":{"description":"The option manager to resolve from.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":241,"name":"required","comment":{"description":"Whether the option is required or not.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"literal","value":"false"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"reference","id":null,"name":"User","packageName":"discord.js","typeArguments":[]}]}]}},{"id":242,"name":"resolveOption","comment":{"description":"Asynchronously resolves a user option from the given manager.","blockTags":[{"name":"returns","text":"- A promise that resolves to the resolved user value, or null if the option is not present and not required."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":243,"name":"name","comment":{"description":"The name of the option to resolve.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":244,"name":"options","comment":{"description":"The option manager to resolve from.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":245,"name":"required","comment":{"description":"Whether the option is required or not.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"literal","value":"true"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"reference","id":null,"name":"User","packageName":"discord.js","typeArguments":[]}]}},{"id":246,"name":"resolveOption","comment":{"description":"Asynchronously resolves a user option from the given manager.","blockTags":[{"name":"returns","text":"- A promise that resolves to the resolved user value, or null if the option is not present and not required."}],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":247,"name":"name","comment":{"description":"The name of the option to resolve.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"intrinsic","type":"string"}},{"id":248,"name":"options","comment":{"description":"The option manager to resolve from.","blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandOptionManager","packageName":null,"typeArguments":[]}},{"id":249,"name":"required","comment":{"description":"Whether the option is required or not.","blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"returnType":{"kind":"reference","id":null,"name":"Promise","packageName":"typescript","typeArguments":[{"kind":"union","types":[{"kind":"literal","value":"null"},{"kind":"reference","id":null,"name":"User","packageName":"discord.js","typeArguments":[]}]}]}}]}]}],"enums":[],"functions":[{"id":300,"name":"createMessageCommandUsage","source":{"line":21,"file":"createMessageCommandUsage.ts","path":"helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/helpers/createMessageCommandUsage.ts#L21"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"signatures":[{"id":301,"name":"createMessageCommandUsage","comment":{"description":null,"blockTags":[],"modifierTags":[]},"typeParameters":[],"parameters":[{"id":302,"name":"data","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":false,"type":{"kind":"reference","id":null,"name":"MessageCommandResolvable","packageName":null,"typeArguments":[]}},{"id":303,"name":"options","comment":{"description":null,"blockTags":[],"modifierTags":[]},"rest":false,"optional":true,"type":{"kind":"reference","id":304,"name":"CreateMessageCommandUsageOptions","packageName":"@reciple/message-command-utils","typeArguments":[]}}],"returnType":{"kind":"intrinsic","type":"string"}}]}],"interfaces":[{"id":304,"name":"CreateMessageCommandUsageOptions","source":{"line":4,"file":"createMessageCommandUsage.ts","path":"helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/helpers/createMessageCommandUsage.ts#L4"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[],"properties":[{"id":306,"name":"flags","source":{"line":6,"file":"createMessageCommandUsage.ts","path":"helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/helpers/createMessageCommandUsage.ts#L6"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":304,"readonly":false,"optional":true,"type":{"kind":"reflection","properties":[{"id":311,"name":"flagBrackets","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"reflection","properties":[{"id":314,"name":"optional","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"tuple","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"string"}]}},{"id":313,"name":"required","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"tuple","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"string"}]}}],"signatures":null,"methods":null}},{"id":308,"name":"include","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}},{"id":310,"name":"showValueType","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}},{"id":309,"name":"useShort","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"signatures":null,"methods":null}},{"id":315,"name":"optionBrackets","source":{"line":15,"file":"createMessageCommandUsage.ts","path":"helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/helpers/createMessageCommandUsage.ts#L15"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":304,"readonly":false,"optional":true,"type":{"kind":"reflection","properties":[{"id":318,"name":"optional","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"tuple","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"string"}]}},{"id":317,"name":"required","comment":{"description":null,"blockTags":[],"modifierTags":[]},"readonly":false,"optional":true,"type":{"kind":"tuple","types":[{"kind":"intrinsic","type":"string"},{"kind":"intrinsic","type":"string"}]}}],"signatures":null,"methods":null}},{"id":305,"name":"prefix","source":{"line":5,"file":"createMessageCommandUsage.ts","path":"helpers","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/helpers/createMessageCommandUsage.ts#L5"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":304,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"string"}}],"methods":[]},{"id":1,"name":"MessageCommandBooleanOptionBuilderData","source":{"line":5,"file":"MessageCommandBooleanOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandBooleanOptionBuilder.ts#L5"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[],"properties":[],"methods":[]},{"id":34,"name":"MessageCommandChannelOptionBuilderData","source":{"line":6,"file":"MessageCommandChannelOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandChannelOptionBuilder.ts#L6"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[],"properties":[{"id":36,"name":"allow_outside_channels","source":{"line":8,"file":"MessageCommandChannelOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandChannelOptionBuilder.ts#L8"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":34,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}},{"id":35,"name":"channel_types","source":{"line":7,"file":"MessageCommandChannelOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandChannelOptionBuilder.ts#L7"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":34,"readonly":false,"optional":true,"type":{"kind":"array","type":{"kind":"reference","id":null,"name":"ChannelType","packageName":"discord-api-types","typeArguments":[]}}}],"methods":[]},{"id":72,"name":"MessageCommandIntegerOptionBuilderData","source":{"line":4,"file":"MessageCommandIntegerOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandIntegerOptionBuilder.ts#L4"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[],"properties":[{"id":73,"name":"max_value","source":{"line":5,"file":"MessageCommandIntegerOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandIntegerOptionBuilder.ts#L5"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":72,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"number"}},{"id":74,"name":"min_value","source":{"line":6,"file":"MessageCommandIntegerOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandIntegerOptionBuilder.ts#L6"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":72,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"number"}}],"methods":[]},{"id":115,"name":"MessageCommandMessageOptionBuilderData","source":{"line":6,"file":"MessageCommandMessageOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandMessageOptionBuilder.ts#L6"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[],"properties":[{"id":117,"name":"allow_bot_messages","source":{"line":8,"file":"MessageCommandMessageOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandMessageOptionBuilder.ts#L8"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":115,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}},{"id":116,"name":"allow_outside_messages","source":{"line":7,"file":"MessageCommandMessageOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandMessageOptionBuilder.ts#L7"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":115,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"methods":[]},{"id":161,"name":"MessageCommandNumberOptionBuilderData","source":{"line":4,"file":"MessageCommandNumberOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandNumberOptionBuilder.ts#L4"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[],"properties":[{"id":162,"name":"max_value","source":{"line":5,"file":"MessageCommandNumberOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandNumberOptionBuilder.ts#L5"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":161,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"number"}},{"id":163,"name":"min_value","source":{"line":6,"file":"MessageCommandNumberOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandNumberOptionBuilder.ts#L6"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":161,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"number"}}],"methods":[]},{"id":204,"name":"MessageCommandRoleOptionBuilderData","source":{"line":6,"file":"MessageCommandRoleOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandRoleOptionBuilder.ts#L6"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[],"properties":[{"id":205,"name":"allow_everyone","source":{"line":7,"file":"MessageCommandRoleOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandRoleOptionBuilder.ts#L7"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":204,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"methods":[]},{"id":234,"name":"MessageCommandUserOptionBuilderData","source":{"line":6,"file":"MessageCommandUserOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandUserOptionBuilder.ts#L6"},"namespaceParentId":null,"comment":{"description":null,"blockTags":[],"modifierTags":[]},"external":false,"typeParameters":[],"properties":[{"id":235,"name":"allow_bots","source":{"line":7,"file":"MessageCommandUserOptionBuilder.ts","path":"classes/builders/options","url":"https://github.com/thenorthsolution/Reciple/blob/c594a46/packages/message-command-utils/src/classes/builders/options/MessageCommandUserOptionBuilder.ts#L7"},"comment":{"description":null,"blockTags":[],"modifierTags":[]},"parentId":234,"readonly":false,"optional":true,"type":{"kind":"intrinsic","type":"boolean"}}],"methods":[]}],"namespaces":[],"typeAliases":[],"variables":[],"customPages":[],"parsedAt":1724481195652}